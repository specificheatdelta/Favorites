# Serverless #
##############
.serverless/
node_modules/
typescript/node_modules/
.build
build

# Logs and databases #
######################
*.log
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE #
#######
.classpath
.project
.settings
.idea
.metadata
*.iml
*.ipr
.project
.pydevproject
# .vscode

# Unit test / coverage reports #
################################
htmlcov
.tox/
.coverage
.coverage.*
coverage
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Local DynamoDB stack #
########################
.dynamodb
shared-local-instance.db

# Configs #
###########
# .env
.env.*
.env.*bak*
!.env.example

# Local .terraform directories
**/.terraform/*
.terraform/
.terraform*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
*.hcl
!*.pkr.hcl

# MacOS files
.DS_STORE
